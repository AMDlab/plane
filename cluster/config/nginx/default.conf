# NGINX sets $http_upgrade based on the Upgrade HTTP header,
# but there is apparently no equivalent for the Connection
# header. A WebSocket connection requires both to be set,
# so the trick is to use NGINX's map directive to set a
# variable called $connection_upgrade which takes the value
# "upgrade" if the Upgrade header is present and "close"
# otherwise. Below, we'll use this to set the Connection
# header. If you don't need WebSocket support, you can
# remove this. It comes from the NGINX documentation:
# http://nginx.org/en/docs/http/websocket.html
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
 listen 80;
 server_name frontend;

 location ~ ^/p/([a-zA-Z0-9]+)/(.*)$ {
    # We use the URL from the path to find the correct host to
    # route the request to.
    proxy_pass http://spawner-$1.spawner.svc.cluster.local:9090/$2;

    # The proxy_set_header calls are only necessary if you want
    # WebSocket support, otherwise they can be removed.
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    resolver kube-dns.kube-system.svc.cluster.local;
 }

 location / {
   root /usr/share/nginx/html/;
   try_files $uri /index.html;
 }
}